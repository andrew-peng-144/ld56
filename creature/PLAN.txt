

- (or just shapes) make 5~10 8x8 test creatures
- animate very basically
- make simple projectiles
- use TEXTURE PACKER. have a folder for raw assets then one for compiled

- start writing js engine
- use libraries for most calculations, code is for organization
- organization sceheme: basic OOP with game entity parent

- SCROLLING MAP
- BUTTONS ON MAP



--

stuff to fix afterward

- blurry text and sprites
- proper scene manager
- declarative approach for building entities, or fast way to setup imperative approach (e.g. helper functions that don't modify anything in its args and only returns the new thing, but are injected dependencies for systems they need)
- merge all entities into one - most were scrunched in critter or projectile which can easily be merged. they can still be in separate datastores for faster query
- describe systems without oop. order of systems shouldn't matter much
- coordinate systems between pixi, matter, and screen need to have easy conversion functions. lots of time wasted doing these by hand.
- ideally all the organization is language/framework agnostic. so like component systems.